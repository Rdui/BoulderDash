class Bomb extends Item {
  Tile tile; // reference to tile the bomb is on
  int delay; // bomb time in s
  int bomb_type;
  int radius;
  int shape;
  int x;
  int y;
  int bombTimer;

  Bomb(PImage icon_, int radius_, int shape_, int delay_, String name) {
    super(icon_, 0, true, name);
    radius = radius_;
    shape = shape_;
    delay = delay_;
  }

  Bomb(Bomb another) {
    super(another.icon, another.score, true, another.itemName);
    println("asd");
    radius = another.radius;
    shape = another.shape;
    delay = another.delay;
  }

  void Use(Item item) {
    if (player.bombsLeft > 0) {
      Bomb bomb = new Bomb((Bomb)item);
      bombs.add(bomb);
      bomb.setPosition(player.getX(), player.getY());
      bomb.bombTimer = millis()+delay*1000;
      bombs.add(bomb);
      player.bombsLeft--;
    }
  }


  void setPosition(int x_, int y_) {
    x = x_;
    y = y_;
  }

  // draws and checks if the bomb should explode
  void draw() {
    if (bombTimer != 0 && bombTimer <= millis()) {
      this.explode();
      bombs.remove(this);
    }
  }


  // clears breakable things from the exploding bombs blast radius
  void explode() {
    if (shape == 0)
      plusExplosion();
    player.bombsLeft++;
  }

  void plusExplosion() {
    flames.add(new Flame(loadImage("graphics/explosionmiddle.png"), x, y, 15));
    for (int fx = -radius; fx < radius; fx++)
      flames.add(new Flame(loadImage("graphics/explosionhorizontal.png"), fx, y, 15));
    for (int fy = -radius; fy < radius; fy++)
      flames.add(new Flame(loadImage("graphics/explosionvertical.png"), x, fy, 15));
  }
}